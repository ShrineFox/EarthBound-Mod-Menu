import "../commands/window_cmds.ccs"
import "../commands/flag_cmds.ccs"
import "../enums/flags.ccs"
import "../asm/bg_viewer.ccs"
import "../asm/drug_util.ccs"
import "../asm/cc_actionscript.ccs"

ChaosMode:
	set(flg_RandomWarp)

    random(255)
	store_registers_global

	if result_is(0) { eob }
	load_registers_global if result_is_greaterthan_orequal(215) { goto(RandomPalette) }
	load_registers_global if result_is_greaterthan_orequal(200) { goto(RandomBattle) }
	load_registers_global if result_is_greaterthan_orequal(160) { goto(RandomWarp) }
	load_registers_global if result_is_greaterthan_orequal(140) { goto(RandomFloatSprite) }
	load_registers_global if result_is_greaterthan_orequal(100) { goto(RandomBGM) }
	load_registers_global if result_is_greaterthan_orequal(75) { goto(RandomSound) }
	load_registers_global if result_is_greaterthan_orequal(60) { goto(RandomizeNpcParty) }
	load_registers_global if result_is_greaterthan_orequal(40) { goto(RandomizeMainParty) }
	load_registers_global if result_is_greaterthan_orequal(35) { goto(BacktrackWarp) }
	load_registers_global if result_is_greaterthan_orequal(5) { goto(RandomDistortion) }
	load_registers_global if result_is_greaterthan_orequal(2) { goto(CorruptMap) }
	load_registers_global if result_is_greaterthan_orequal(1) { goto(RandomBBG) }
eob

command change_map_pal(tileset, palette, duration) "[1F E1 {byte tileset} {byte palette} {byte duration}]"

RandomPalette:
	if flg_DisableChaosEffect_RandomPalette { eob }
    random(40)
	store_registers_global
	if result_is(0) { change_map_pal(1, 0, 1) eob }
	load_registers_global if result_is(0) { change_map_pal(1, 0, 1) }
	load_registers_global if result_is(1) { change_map_pal(1, 1, 1) }
	load_registers_global if result_is(2) { change_map_pal(1, 2, 1) }
	load_registers_global if result_is(3) { change_map_pal(1, 3, 1) }
	load_registers_global if result_is(4) { change_map_pal(1, 4, 1) }
	load_registers_global if result_is(5) { change_map_pal(1, 5, 1) }
	load_registers_global if result_is(6) { change_map_pal(1, 6, 1) }
	load_registers_global if result_is(7) { change_map_pal(1, 7, 1) }
	load_registers_global if result_is(8) { change_map_pal(1, 8, 1) }
	load_registers_global if result_is(9) { change_map_pal(1, 9, 1) }
	load_registers_global if result_is(10) { change_map_pal(1, 10, 1) }
	load_registers_global if result_is(11) { change_map_pal(1, 11, 1) }
	load_registers_global if result_is(12) { change_map_pal(1, 12, 1) }
	load_registers_global if result_is(13) { change_map_pal(1, 13, 1) }
	load_registers_global if result_is(14) { change_map_pal(1, 14, 1) }
	load_registers_global if result_is(15) { change_map_pal(1, 15, 1) }
	load_registers_global if result_is(16) { change_map_pal(1, 16, 1) }
	load_registers_global if result_is(17) { change_map_pal(1, 17, 1) }
	load_registers_global if result_is(18) { change_map_pal(1, 18, 1) }
	load_registers_global if result_is(19) { change_map_pal(1, 19, 1) }
	load_registers_global if result_is(20) { change_map_pal(1, 20, 1) }
	load_registers_global if result_is(21) { change_map_pal(1, 21, 1) }
	load_registers_global if result_is(22) { change_map_pal(1, 22, 1) }
	load_registers_global if result_is(23) { change_map_pal(1, 23, 1) }
	load_registers_global if result_is(24) { change_map_pal(1, 24, 1) }
	load_registers_global if result_is(25) { change_map_pal(1, 25, 1) }
	load_registers_global if result_is(26) { change_map_pal(1, 26, 1) }
	load_registers_global if result_is(27) { change_map_pal(1, 27, 1) }
	load_registers_global if result_is(28) { change_map_pal(1, 28, 1) }
	load_registers_global if result_is(29) { change_map_pal(1, 29, 1) }
	load_registers_global if result_is(30) { change_map_pal(1, 30, 1) }
	load_registers_global if result_is(31) { change_map_pal(1, 31, 1) }
	load_registers_global if result_is(32) { change_map_pal(1, 32, 1) }
	load_registers_global if result_is(33) { change_map_pal(1, 33, 1) }
	load_registers_global if result_is(34) { change_map_pal(1, 34, 1) }
	load_registers_global if result_is(35) { change_map_pal(1, 35, 1) }
	load_registers_global if result_is(36) { change_map_pal(1, 36, 1) }
	load_registers_global if result_is(37) { change_map_pal(1, 37, 1) }
	load_registers_global if result_is(38) { change_map_pal(1, 38, 1) }
	load_registers_global if result_is(39) { change_map_pal(1, 39, 1) }
	load_registers_global if result_is(40) { change_map_pal(1, 40, 1) }
eob

RandomBattle:
	if flg_DisableChaosEffect_RandomBattle { eob }
	random(255) swap CloseAllModMenuWnd() "[1F 23 00 00]"
eob

RandomWarp:
	if flg_DisableChaosEffect_RandomWarp { eob }
	random(233) swap warp(0)
eob

RandomBGM:
	if flg_DisableChaosEffect_RandomBGM { eob }
	random(191) swap music(0)
eob

CorruptMap:
	if flg_DisableChaosEffect_CorruptMap { eob }
	"[1A 0F]"
eob

BacktrackWarp:
	if flg_DisableChaosEffect_BacktrackWarp { eob }
	random(100)
    if result_is_greaterthan_orequal(50) 
	{
		anchor_set
	}
    else
	{
		anchor_warp
    }
eob

RandomFloatSprite:
	if flg_DisableChaosEffect_RandomFloatSprite { eob }
	random(100)
    store_registers_global
    load_registers_global if result_is_greaterthan_orequal(75) 
	{
		hide_char_float(1)
		random(11)
		swap
		show_char_float(1, 0)
	}
	load_registers_global if result_is_greaterthan_orequal(50)
	{ 
		hide_char_float (2)
		random(11)
		swap
		show_char_float (2, 0)
	}
	load_registers_global if result_is_greaterthan_orequal(25)
	{
		hide_char_float(3)
		random(11)
		swap
		show_char_float(3, 0)
	}
	load_registers_global if result_is_greaterthan_orequal(0)
	{
		hide_char_float (4)
		random(11)
		swap
		show_char_float (4, 0)
	}
eob

RandomSound:
	if flg_DisableChaosEffect_RandomSound { eob }
	random(124)
    swap sound(0)
eob

RandomBGMEffect:
	if flg_DisableChaosEffect_RandomBGMEffect { eob }
	random(23)
    swap music_effect(0)
eob

RandomizeMainParty:
	call(RandomizeMainPartyLeader)
	call(AddRandomMainPartyMember)
    call(AddRandomMainPartyMember)
    call(AddRandomMainPartyMember)
eob

AddRandomMainPartyMember:
	random(250)
    store_registers_global
    load_registers_global if result_is_greaterthan_orequal(225) { party_add(4) }
	else {
		load_registers_global if result_is_greaterthan_orequal(200) { party_add(3) }
		else {
			load_registers_global if result_is_greaterthan_orequal(175) { party_add(2) }
			else {
				load_registers_global if result_is_greaterthan_orequal(150) { party_add(1) }
			}
		}
	}
eob

RandomizeMainPartyLeader:
	if flg_DisableChaosEffect_RandomizeMainParty { eob }
	// Random Party Leader
	random(100)
    store_registers_global if result_is_greaterthan_orequal(75) { party_add(1) party_remove(2) party_remove(3) party_remove(4) }
    else {
		load_registers_global if result_is_greaterthan_orequal(50) { party_add(2) party_remove(1) party_remove(3) party_remove(4) }
		else {
			load_registers_global if result_is_greaterthan_orequal(25) { party_add(3) party_remove(2) party_remove(1) party_remove(4) }
			else {
				load_registers_global if result_is_greaterthan_orequal(0) { party_add(4) party_remove(2) party_remove(3) party_remove(1) }
			}
		}
	}
eob

removenpcparty:
	counter(5)
	_loop:
	if counter_is(18) { goto(_loopend) }
	ctoarg party_remove(0)
	inc
	goto(_loop)
	RefreshScreen_NoPrevWnd()
	_loopend:
eob

addrandomnpcparty:
	random(120)
    store_registers_global
	load_registers_global if result_is_greaterthan_orequal(110)
    {
        party_add(15)
    }
    load_registers_global if result_is_greaterthan_orequal(100)
    {
        party_add(14)
    }
    load_registers_global if result_is_greaterthan_orequal(90)
    {
        party_add(13)
    }
    load_registers_global if result_is_greaterthan_orequal(80)
    {
        party_add(12)
    }
    load_registers_global if result_is_greaterthan_orequal(70)
    {
        party_add(11)
    }
    load_registers_global if result_is_greaterthan_orequal(60)
    {
        party_add(10)
    }
    load_registers_global if result_is_greaterthan_orequal(50)
    {
        party_add(9)
	}
    load_registers_global if result_is_greaterthan_orequal(40)
    {
        party_add(8)
    }
    load_registers_global if result_is_greaterthan_orequal(30)
    {
        party_add(7)
	}
    load_registers_global if result_is_greaterthan_orequal(20)
    {
        party_add(6)
	}
    load_registers_global if result_is_greaterthan_orequal(10)
    {
        party_add(5)
    }
	load_registers_global if result_is_greaterthan_orequal(0) { eob }
eob

RandomizeNpcParty:
	if flg_DisableChaosEffect_RandomizeNpcParty { eob }
	// Random NPC Followers
	call(removenpcparty)
	call(addrandomnpcparty)
    call(addrandomnpcparty)
eob

command sprite_spawn(sprite, move, style) "[1F 15 {short sprite} {short move} {byte style}]"

RandomDistortion:
	if flg_DisableChaosEffect_RandomDistortion { eob }
	random(255)
    store_registers_global // Backup result register for movement script to use as distortion ID
    create_sprite_actionscript(106, movscr_Drug, 1)
eob

RandomBBG:
	if flg_DisableChaosEffect_RandomBBG { eob }
	random(255)
	swap
    random(255)
    sprite_spawn(106, 896, 1) // Invisible camera sprite running "Cutscene On"
    show_battle_bg(-1,-1,0)
    sprite_spawn(106, 897, 1) // Invisible camera sprite running "Cutscene Off"
eob

ChooseEffect:
	CloseAllModMenuWnd()
    OpenModMenu2Wnd(18)
	menu 1 {
		"Rnd MainPty": { call(RandomizeMainParty) }
		"Rnd NpcParty": { call(RandomizeNpcParty) }
		"Rnd Palette": { call(RandomPalette) }
		"Rnd Distort":  { call(RandomDistortion) }
		"Rnd BattleBG":   { call(RandomBBG) }
		"CRASH": { party_add(240) }
		default "Back": { goto(modmenu.ModMenu) }
	}
goto(ChooseEffect)
